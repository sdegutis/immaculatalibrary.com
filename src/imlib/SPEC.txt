

Engine input data:

  { [key: string]: object }[]

  Used for routes, views, data, helpers, etc.


Engine rules (i.e. app.start):

  1. Link items via $type
  2. Apply type figures
  3. Build site structures
  4. Compute item functions
  5. Boot all items top-down
  6. Start timers and routes
  7. On site.rebuild() goto #1


Computing:

  { $eval: string } => returns vm.runInNewContext(s)
  any other value  => that value

  What 'this' is in each context:
    Item:   defining item
    Figure: destination item

  All eval contexts have access to JSX, including:
    JSX.createElement
    JSX.fragment


Special item fields (all optional):

  $name:str
    => used for site.named()

  $type:str, $figure:obj
    => for each $type by id (deepest first)
      => inherit this[k] from type.$figure

  $route:fn, $get:fn, $post:fn, $delete:fn,
  $put:fn, $patch:fn, $head:fn, $options:fn
    => if $route evals to non-blank string
       map that path each verb-fn present

  $tick:fn & $ms:num
    => call $tick every $ms seconds

  $boot:fn
    => run after each site build
       runs in top-down order


Item API:

  item[key]   => item.computed[key]
  item.$id    => string
  item.$data  => raw object for item
  item.$items => items with this direct type
  item.$type  => item or null


Site API:

  site.items: { id: item }
  site.root: top-level item[]
  site.named(path: string[])
  site.create(data): new id
  site.update(id, data)
  site.delete(id)
  site.rebuild()
    tries to build new site
    if worked
      pushes db changes
      routes new site
      returns new site
    else
      throws error


Route API:

  Input parameter:

    query(): URLSearchParams from query
    text(): string from body
    json(): object from body
    form(): URLSearchParams from body
    headers(): express.js headers object
    session: object

  return Promise<string | {
    status?: number
    headers?: object
    (redirect: string |
     text: string |
     json: object)
  }>


Globals:

  $site: current site
  [globals]: app.sandbox
  All items share context
